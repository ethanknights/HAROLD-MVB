axis.line =
element_line(colour = "black",size = 1.5),
axis.ticks = element_line(colour = "black",
size = 1.5),
text = element_text(size=24))
print(p)
dev.off()
#---RH---#
rlm_model <- rlm(MVPA_R_4way ~ age0z2,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("age0z21","age0z22")) #age effect?
# f.robftest(rlm_model, var="age0z21") #linear
# f.robftest(rlm_model, var="age0z22") #quadratic
f.robftest(rlm_model)
#Plot
rm(p)
png(file.path(outImageDir,'decAcc_Age_RH.png'), width = 500, height = 500)
p <- ggplot(df, aes(x = age, y = MVPA_R_4way))
p <- p + geom_point(shape = 21, size = 3, colour = "indianred2", fill = "lightpink", stroke = 2)
p <- p + stat_smooth(method = "rlm", se = TRUE, fill = "grey60", formula = y ~ x, colour = "springgreen3", size = 3)
#p <- p + stat_smooth(method = "rlm", se = TRUE, fill = "grey60", formula = y ~ poly(x,2, raw = TRUE), colour = "springgreen3", size = 3)
p <- p + geom_hline(yintercept = 25, linetype = "longdash", color = 'black', size = 0.5) #chance
#formatting
p <- p +
ylim(0,60) +
scale_x_continuous(breaks = round(seq(20, max(80), by = 20),1),
limits = c(15,90)) +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
axis.line =
element_line(colour = "black",size = 1.5),
axis.ticks = element_line(colour = "black",
size = 1.5),
text = element_text(size=24))
print(p)
dev.off()
#---------- decAcc Boost correlate with age? --------#
df$MVPA_boost = df$MVPA_Bi_4way - df$MVPA_L_4way
rlm_model <- rlm(MVPA_boost ~ age0z2,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("age0z21","age0z22")) #age effect?
# f.robftest(rlm_model, var="age0z21") #linear
# f.robftest(rlm_model, var="age0z22") #quadratic
f.robftest(rlm_model)
#--- BF METHOD 2 - BayesFactor package ---#
summary(rlm_model) #reminder!!
bf10 <-           lmBF(MVPA_boost ~ age0z, data = df)
bf01 = 1/bf10; bf01
#Plot
rm(p)
png(file.path(outImageDir,'decAccBoost.png'), width = 500, height = 500)
p <- ggplot(df, aes(x = age, y = MVPA_boost))
p <- p + geom_point(shape = 21, size = 3, colour = "indianred2", fill = "lightpink", stroke = 2)
p <- p + stat_smooth(method = "rlm", se = TRUE, fill = "grey60", formula = y ~ x, colour = "springgreen3", size = 3)
#p <- p + stat_smooth(method = "rlm", se = TRUE, fill = "grey60", formula = y ~ poly(x,2, raw = TRUE), colour = "springgreen3", size = 3)
#formatting
p <- p +
ylim(-25,25) +
scale_x_continuous(breaks = round(seq(20, max(80), by = 20),1),
limits = c(15,90)) +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
axis.line =
element_line(colour = "black",size = 1.5),
axis.ticks = element_line(colour = "black",
size = 1.5),
text = element_text(size=24))
print(p)
dev.off()
#PURPOSE:
#
#Load Data for the Free Selection Task
#
#Then use 'df' in the other short scripts  for:
#- unviariate mean
#- MVB spread
#- MVB boost (ordinal category codes)
#- MVB multivariate mapping (real vs. shuffled onsets)
#- MVPA between-finger
library(ggplot2)
library(Hmisc)
library(MASS)
library(reshape2)
library(sfsmisc)
library(sjPlot)
library(BayesFactor)
library(sjmisc)
library(dplyr)
library(tidyverse)
library(broom)
library(Rcpp)
library(stringi)
library(foreign)
library(mdscore)
rm(list = ls()) # clears environment
cat("\f") # clears console
dev.off() # clears graphics device
graphics.off() #clear plots
#---- Setup ----#
# wd <- "/imaging/ek03/MVB/FreeSelection/MVB/R"
wd = dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(wd)
rawDir = "csv"
outImageDir = 'images'
dir.create(outImageDir)
#---- Load Data ----#
rawD <- read.csv(file.path(rawDir,'data.csv'), header=TRUE,sep=",")
df = rawD
#---- Transform some stuff ----#
#Age quadratic expansion
df$age0z2 <- poly(df$age0z,2) #1st linear, 2nd quad
#make variablers factors
df$ordy <- as.factor(df$ordy) #Check it worked: sapply(df, class)
#rescale out of scanner RT
df$outScanner_RTmean <- df$outScanner_RTmean * 1000
df$outScanner_RTsd <- df$outScanner_RTsd * 1000
df$inScanner_RTmean <- df$inScanner_RTmean * 1000
df$inScanner_RTsd <- df$inScanner_RTsd * 1000
#---- assign subs a tertile age group in df$tert ----#
#https://stackoverflow.com/questions/62574146/how-to-create-tertile-in-r
# Find tertiles
vTert = quantile(df$age, c(0:3/3)) #rememebr this is useful for plot_model
df$ageTert = with(df,
cut(age,
vTert,
include.lowest = T,
labels = c("YA", "ML", "OA")))
#---- Run Analyses (manually) ----#
# run_fMRI_univariate.R
# run_fMRI_spread.R
# run_fMRI_MVB.R
# run_BEHAV.R
# run_fMRI_MVPA.R #not this expriment!
#----- RT VARIABILITY -----%
rlm_model <- rlm(inScanner_RTsd ~ age0z2,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("age0z21","age0z22")) #age effect?
f.robftest(rlm_model, var="age0z21") #linear
f.robftest(rlm_model, var="age0z22") #quadratic
vTert
#Plot (not standardised for interpretability)
rlm_model <- rlm(inScanner_RTsd ~ univariateMean_R * age,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("univariateMean_R:age"))
p = plot_model(rlm_model, type = "pred", terms = c("univariateMean_R", "age [37, 58, 80]")) # vTert
#formatting
p <- p +
# ylim(0,150) +
# xlim(-0.05,0.05) +
# scale_x_continuous(breaks = round(seq(20, max(80), by = 20),1),
#                    limits = c(15,90)) +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
axis.line =
element_line(colour = "black",size = 1.5),
axis.ticks = element_line(colour = "black",
size = 1.5),
text = element_text(size=24)) +
coord_cartesian(xlim = c(-0.1,0.1) , ylim = c(0,350), expand = TRUE)
ggsave(file.path(outImageDir,"RTsd~RHBYAge_inScanner.png"),
width = 25, height = 25, units = 'cm', dpi = 300); p
p
f.robftest(rlm_model, var=c("univariateMean_R:age"))
rlm_model <- rlm(inScanner_RTsd ~ univariateMean_R_0z * age0z2,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("univariateMean_R_0z:age0z21","univariateMean_R_0z:age0z22")) #age effect?
# f.robftest(rlm_model, var="univariateMean_R_0z:age0z21")
f.robftest(rlm_model, var="age0z21")
f.robftest(rlm_model, var="age0z22")
f.robftest(rlm_model, var=c("age0z21","age0z22"))
f.robftest(rlm_model, var=c("univariateMean_R_0z:age0z21","univariateMean_R_0z:age0z22"))
f.robftest(rlm_model, var="univariateMean_R_0z:age0z21")
f.robftest(rlm_model, var="univariateMean_R_0z:age0z22")
f.robftest(rlm_model, var=c("univariateMean_R_0z:age0z21","univariateMean_R_0z:age0z22"))
#-------------- Get bayes factors --------------#
summary(rlm_model) #reminder!!
full <-           lmBF(inScanner_RTsd ~ univariateMean_R_0z * age0z2, data = df)
noInteraction <-  lmBF(inScanner_RTsd ~ univariateMean_R_0z + age0z2, data = df)
bf10 = full / noInteraction #less than 1 favours models of
bf01 = 1/bf10; bf01
#======================= BEHAVIOUR IN-SCANNER ======================#
#----- RT MEAN -----%
rlm_model <- rlm(inScanner_RTmean ~ age0z2,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("age0z21","age0z22")) #age effect?
f.robftest(rlm_model, var="age0z21") #linear
f.robftest(rlm_model, var="age0z22") #quadratic
#Plot
p <- ggplot(df, aes(x = age, y = inScanner_RTmean))
p <- p + geom_point(shape = 21, size = 3, colour = "black", fill = "white", stroke = 2)
p <- p + stat_smooth(method = "rlm", se = TRUE, fill = "grey60", formula = y ~ x, colour = "springgreen3", size = 3)
#p <- p + stat_smooth(method = "rlm", se = TRUE, fill = "grey60", formula = y ~ poly(x,2, raw = TRUE), colour = "springgreen3", size = 3)
#formatting
p <- p +
ylim(0,1000) +
scale_x_continuous(breaks = round(seq(20, max(80), by = 20),1),
limits = c(15,90)) +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
axis.line =
element_line(colour = "black",size = 1.5),
axis.ticks = element_line(colour = "black",
size = 1.5),
text = element_text(size=24))
ggsave(file.path(outImageDir,"RTmean~Age_InScanner.png"),
width = 25, height = 25, units = 'cm', dpi = 300); p
#----------------------- RT ~ AGE + RH ACTIVATION ----------------------#
#------ Full Multiple Regression -------#
rlm_model <- rlm(inScanner_RTmean ~ univariateMean_R_0z * age0z2,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("univariateMean_R_0z:age0z21","univariateMean_R_0z:age0z22")) #age effect?
# f.robftest(rlm_model, var="univariateMean_R_0z:age0z21")
# f.robftest(rlm_model, var="univariateMean_R_0z:age0z22")
#Other coefficients
f.robftest(rlm_model)
f.robftest(rlm_model, var="univariateMean_R_0z")
f.robftest(rlm_model, var=c("age0z21","age0z22")) #age effect?
f.robftest(rlm_model, var="age0z21")
f.robftest(rlm_model, var="age0z22")
#-------------- Get bayes factors --------------#
summary(rlm_model) #reminder!!
full <-           lmBF(inScanner_RTmean ~ univariateMean_R_0z * age0z2, data = df)
noInteraction <-  lmBF(inScanner_RTmean ~ univariateMean_R_0z + age0z2, data = df)
bf10 = full / noInteraction #less than 1 favours models of
bf01 = 1/bf10; bf01
# onlyActivation  <- lmBF(inScanner_RTmean ~ univariateMean_R_0z, data=df); onlyActivation
# onlyAge         <- lmBF(inScanner_RTmean ~ age0z2, data=df); onlyAge
#Plot (not standardised for interpretability)
rlm_model <- rlm(inScanner_RTmean ~ univariateMean_R * age,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("univariateMean_R:age"))
p = plot_model(rlm_model, type = "pred", terms = c("univariateMean_R", "age [37, 58, 80]")) # vTert
#formatting
p <- p +
# ylim(0,150) +
# xlim(-0.05,0.05) +
# scale_x_continuous(breaks = round(seq(20, max(80), by = 20),1),
#                    limits = c(15,90)) +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
axis.line =
element_line(colour = "black",size = 1.5),
axis.ticks = element_line(colour = "black",
size = 1.5),
text = element_text(size=24)) +
coord_cartesian(xlim = c(-0.1,0.1) , ylim = c(0,1000), expand = TRUE)
ggsave(file.path(outImageDir,"RTmean~RHBYAge_inScanner.png"),
width = 25, height = 25, units = 'cm', dpi = 300); p
p
bf01 = 1/bf10; bf01
#======================= BEHAVIOUR IN-SCANNER ======================#
#----- RT VARIABILITY -----%
rlm_model <- rlm(inScanner_RTsd ~ age0z2,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("age0z21","age0z22")) #age effect?
f.robftest(rlm_model, var="age0z21") #linear
f.robftest(rlm_model, var="age0z22") #quadratic
#Plot
p <- ggplot(df, aes(x = age, y = inScanner_RTsd))
p <- p + geom_point(shape = 21, size = 3, colour = "black", fill = "white", stroke = 2)
p <- p + stat_smooth(method = "rlm", se = TRUE, fill = "grey60", formula = y ~ x, colour = "springgreen3", size = 3)
#p <- p + stat_smooth(method = "rlm", se = TRUE, fill = "grey60", formula = y ~ poly(x,2, raw = TRUE), colour = "springgreen3", size = 3)
#formatting
p <- p +
ylim(0,400) +
scale_x_continuous(breaks = round(seq(20, max(80), by = 20),1),
limits = c(15,90)) +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
axis.line =
element_line(colour = "black",size = 1.5),
axis.ticks = element_line(colour = "black",
size = 1.5),
text = element_text(size=24))
ggsave(file.path(outImageDir,"RTsd~Age_InScanner.png"),
width = 25, height = 25, units = 'cm', dpi = 300); p
#----------------------- RT ~ AGE + RH ACTIVATION ----------------------#
#------ Full Multiple Regression -------#
rlm_model <- rlm(inScanner_RTsd ~ univariateMean_R_0z * age0z2,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("univariateMean_R_0z:age0z21","univariateMean_R_0z:age0z22")) #age effect?
# f.robftest(rlm_model, var="univariateMean_R_0z:age0z21")
# f.robftest(rlm_model, var="univariateMean_R_0z:age0z22")
#Other coefficients
f.robftest(rlm_model)
f.robftest(rlm_model, var="univariateMean_R_0z")
f.robftest(rlm_model, var=c("age0z21","age0z22")) #age effect?
f.robftest(rlm_model, var="age0z21")
f.robftest(rlm_model, var="age0z22")
#-------------- Get bayes factors --------------#
summary(rlm_model) #reminder!!
full <-           lmBF(inScanner_RTsd ~ univariateMean_R_0z * age0z2, data = df)
noInteraction <-  lmBF(inScanner_RTsd ~ univariateMean_R_0z + age0z2, data = df)
bf10 = full / noInteraction #less than 1 favours models of
bf01 = 1/bf10; bf01
# onlyActivation  <- lmBF(inScanner_RTmean ~ univariateMean_R_0z, data=df); onlyActivation
# onlyAge         <- lmBF(inScanner_RTmean ~ age0z2, data=df); onlyAge
#Plot (not standardised for interpretability)
rlm_model <- rlm(inScanner_RTsd ~ univariateMean_R * age,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("univariateMean_R:age"))
p = plot_model(rlm_model, type = "pred", terms = c("univariateMean_R", "age [37, 58, 80]")) # vTert
#formatting
p <- p +
# ylim(0,150) +
# xlim(-0.05,0.05) +
# scale_x_continuous(breaks = round(seq(20, max(80), by = 20),1),
#                    limits = c(15,90)) +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
axis.line =
element_line(colour = "black",size = 1.5),
axis.ticks = element_line(colour = "black",
size = 1.5),
text = element_text(size=24)) +
coord_cartesian(xlim = c(-0.1,0.1) , ylim = c(0,350), expand = TRUE)
ggsave(file.path(outImageDir,"RTsd~RHBYAge_inScanner.png"),
width = 25, height = 25, units = 'cm', dpi = 300); p
p
#======================= BEHAVIOUR OUT-SCANNER ======================#
#----- RT MEAN -----%
rlm_model <- rlm(outScanner_RTmean ~ age0z2,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("age0z21","age0z22")) #age effect?
f.robftest(rlm_model, var="age0z21") #linear
f.robftest(rlm_model, var="age0z22") #quadratic
#Plot
p <- ggplot(df, aes(x = age, y = outScanner_RTmean))
p <- p + geom_point(shape = 21, size = 3, colour = "black", fill = "white", stroke = 2)
p <- p + stat_smooth(method = "rlm", se = TRUE, fill = "grey60", formula = y ~ x, colour = "springgreen3", size = 3)
#p <- p + stat_smooth(method = "rlm", se = TRUE, fill = "grey60", formula = y ~ poly(x,2, raw = TRUE), colour = "springgreen3", size = 3)
#formatting
p <- p +
ylim(0,1000) +
scale_x_continuous(breaks = round(seq(20, max(80), by = 20),1),
limits = c(15,90)) +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
axis.line =
element_line(colour = "black",size = 1.5),
axis.ticks = element_line(colour = "black",
size = 1.5),
text = element_text(size=24))
ggsave(file.path(outImageDir,"RTmean~Age_outScanner.png"),
width = 25, height = 25, units = 'cm', dpi = 300); p
#----------------------- RT ~ AGE + RH ACTIVATION ----------------------#
#------ Full Multiple Regression -------#
rlm_model <- rlm(outScanner_RTmean ~ univariateMean_R_0z * age0z2,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("univariateMean_R_0z:age0z21","univariateMean_R_0z:age0z22")) #age effect?
# f.robftest(rlm_model, var="univariateMean_R_0z:age0z21")
# f.robftest(rlm_model, var="univariateMean_R_0z:age0z22")
#Other coefficients
f.robftest(rlm_model)
f.robftest(rlm_model, var="univariateMean_R_0z")
f.robftest(rlm_model, var=c("age0z21","age0z22")) #age effect?
f.robftest(rlm_model, var="age0z21")
f.robftest(rlm_model, var="age0z22")
#-------------- Get bayes factors --------------#
summary(rlm_model) #reminder!!
full <-           lmBF(outScanner_RTmean ~ univariateMean_R_0z * age0z2, data = df)
noInteraction <-  lmBF(outScanner_RTmean ~ univariateMean_R_0z + age0z2, data = df)
bf10 = full / noInteraction #less than 1 favours models of
bf01 = 1/bf10; bf01
# onlyActivation  <- lmBF(outScanner_RTmean ~ univariateMean_R_0z, data=df); onlyActivation
# onlyAge         <- lmBF(outScanner_RTmean ~ age0z2, data=df); onlyAge
#Plot (not standardised for interpretability)
rlm_model <- rlm(outScanner_RTmean ~ univariateMean_R * age,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("univariateMean_R:age"))
p = plot_model(rlm_model, type = "pred", terms = c("univariateMean_R", "age [37, 58, 80]")) # vTert
#formatting
p <- p +
# ylim(0,150) +
# xlim(-0.05,0.05) +
# scale_x_continuous(breaks = round(seq(20, max(80), by = 20),1),
#                    limits = c(15,90)) +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
axis.line =
element_line(colour = "black",size = 1.5),
axis.ticks = element_line(colour = "black",
size = 1.5),
text = element_text(size=24)) +
coord_cartesian(xlim = c(-0.1,0.1) , ylim = c(0,1000), expand = TRUE)
ggsave(file.path(outImageDir,"RTmean~RHBYAge_outScanner.png"),
width = 25, height = 25, units = 'cm', dpi = 300); p
full <-           lmBF(outScanner_RTmean ~ univariateMean_R_0z * age0z2, data = df)
noInteraction <-  lmBF(outScanner_RTmean ~ univariateMean_R_0z + age0z2, data = df)
bf10 = full / noInteraction #less than 1 favours models of
bf01 = 1/bf10; bf01
p
#======================= BEHAVIOUR IN-SCANNER ======================#
#----- RT VARIABILITY -----%
rlm_model <- rlm(outScanner_RTsd ~ age0z2,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("age0z21","age0z22")) #age effect?
f.robftest(rlm_model, var="age0z21") #linear
f.robftest(rlm_model, var="age0z22") #quadratic
#Plot
p <- ggplot(df, aes(x = age, y = outScanner_RTsd))
p <- p + geom_point(shape = 21, size = 3, colour = "black", fill = "white", stroke = 2)
#p <- p + stat_smooth(method = "rlm", se = TRUE, fill = "grey60", formula = y ~ x, colour = "springgreen3", size = 3)
p <- p + stat_smooth(method = "rlm", se = TRUE, fill = "grey60", formula = y ~ poly(x,2, raw = TRUE), colour = "springgreen3", size = 3)
#formatting
p <- p +
ylim(0,400) +
scale_x_continuous(breaks = round(seq(20, max(80), by = 20),1),
limits = c(15,90)) +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
axis.line =
element_line(colour = "black",size = 1.5),
axis.ticks = element_line(colour = "black",
size = 1.5),
text = element_text(size=24))
ggsave(file.path(outImageDir,"RTsd~Age_outScanner.png"),
width = 25, height = 25, units = 'cm', dpi = 300); p
#----------------------- RT ~ AGE + RH ACTIVATION ----------------------#
#------ Full Multiple Regression -------#
rlm_model <- rlm(outScanner_RTsd ~ univariateMean_R_0z * age0z2,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("univariateMean_R_0z:age0z21","univariateMean_R_0z:age0z22")) #age effect?
# f.robftest(rlm_model, var="univariateMean_R_0z:age0z21")
# f.robftest(rlm_model, var="univariateMean_R_0z:age0z22")
#Other coefficients
f.robftest(rlm_model)
f.robftest(rlm_model, var="univariateMean_R_0z")
f.robftest(rlm_model, var=c("age0z21","age0z22")) #age effect?
f.robftest(rlm_model, var="age0z21")
f.robftest(rlm_model, var="age0z22")
#-------------- Get bayes factors --------------#
summary(rlm_model) #reminder!!
full <-           lmBF(outScanner_RTsd ~ univariateMean_R_0z * age0z2, data = df)
noInteraction <-  lmBF(outScanner_RTsd ~ univariateMean_R_0z + age0z2, data = df)
bf10 = full / noInteraction #less than 1 favours models of
bf01 = 1/bf10; bf01
# onlyActivation  <- lmBF(outScanner_RTmean ~ univariateMean_R_0z, data=df); onlyActivation
# onlyAge         <- lmBF(outScanner_RTmean ~ age0z2, data=df); onlyAge
#Plot (not standardised for interpretability)
rlm_model <- rlm(outScanner_RTsd ~ univariateMean_R * age,
data = df, psi = psi.huber, k = 1.345)
summary(rlm_model)
f.robftest(rlm_model, var=c("univariateMean_R:age"))
p = plot_model(rlm_model, type = "pred", terms = c("univariateMean_R", "age [37, 58, 80]")) # vTert
#formatting
p <- p +
# ylim(0,150) +
# xlim(-0.05,0.05) +
# scale_x_continuous(breaks = round(seq(20, max(80), by = 20),1),
#                    limits = c(15,90)) +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
axis.line =
element_line(colour = "black",size = 1.5),
axis.ticks = element_line(colour = "black",
size = 1.5),
text = element_text(size=24)) +
coord_cartesian(xlim = c(-0.1,0.1) , ylim = c(0,350), expand = TRUE)
ggsave(file.path(outImageDir,"RTsd~RHBYAge_outScanner.png"),
width = 25, height = 25, units = 'cm', dpi = 300); p
bf01 = 1/bf10; bf01
p
